[tool.poetry]
name = "python-project-template"
version = "0.1.0"
description = "A pltform and tool agnostic python project template built with cookiecutter."
authors = ["chuanhao01 <34702921+chuanhao01@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cookiecutter = "^2.2.3"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.291"
black = {version = "^23.7.0", allow-prereleases = true}
mypy = "^1.4.1"
mypy-extensions = "^1.0.0"
coverage = "^7.2.7"
coverage-badge = "^1.1.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-html = "^3.2.0"
bandit = "^1.7.5"
pre-commit = "^3.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = ["F", "E", "W", "I", "D", "UP", "PL"]
# For Pylint
ignore = [
  # Pylint
  "PLR0913", # Too many params
  # Pydocstring
  "D211", "D213", # Conflicting rules
  "D417" # Docstring for every param
]
fixable = ["ALL"]

line-length = 100

target-version = "py311"

[tool.ruff.per-file-ignores]
"tests/*.py" = [
  # Pydocstring
  "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", # Ignore missing docstring
]


[tool.black]
# https://github.com/psf/black
target-version = ["py311"]
line-length = 100
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.11
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["{{ cookiecutter.project_name }}", "hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "hooks"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
